/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-04-26 18:46:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 String getFormattedDate() {
          Date currentDate = new Date();
          return currentDate.toLocaleString();
    } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("  <head>\n");
      out.write("  <title>JSP Donut Orders</title>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("  <h2>Donut Orders</h2>\n");
      out.write("    ");
      out.write("\n");
      out.write("    <p>The date is ");
      out.print( getFormattedDate() );
      out.write("</p>\n");
      out.write("   ");

     HashMap<String, Integer> donutOrders = new HashMap<String, Integer>();
     donutOrders.put("Jennifer", 10);
     donutOrders.put("Alex", 1);
     donutOrders.put("Carly", 3);
   
      out.write("\n");
      out.write("<ul>\n");

Set<String> names = donutOrders.keySet();
int totalDonuts = 0;
HashMap<String, String> favoriteDonuts = new HashMap<String, String>();
String[] randomDonuts = {"boston cream pie","apple fritter","maple glazed","cronut",
"classic glazed","voodoo bubble","the homer","voodoo doll","shot glass of vodka"};
Random random = new Random();
  for(String name : names) {
    favoriteDonuts.put(name, randomDonuts[random.nextInt(randomDonuts.length)]);
  }
  for(String name : names) {
  if(donutOrders.get(name) < 6) {
    out.println("<li>" + name + ": " + donutOrders.get(name)
    + " whose favorite is " + favoriteDonuts.get(name) + "</li>");
    totalDonuts += donutOrders.get(name);
  } else if(donutOrders.get(name) > 5){
    out.println("<li> talk to " + name + ", whose favorite is " + favoriteDonuts.get(name) +
    ", about not trying to game the donut system. Get two instead. </li>");
    donutOrders.replace(name, 2);
    totalDonuts += donutOrders.get(name);
  }
}
out.println("<li> total number of donuts: " + totalDonuts + "</li>");
 
      out.write("\n");
      out.write(" </ul>\n");
      out.write("   </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
